const fs = require('fs');
const path = require('path');

// 一个预定义的小型 PNG 文件的十六进制数据 (128x128 蓝色方块)
const pngHexData = `
89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb
0000001974455874536f6674776172650041646f626520496d616765526561647971c9653c
000009e04944415478daed9dcd76d3c815c7ef954a9283c08110c223d8be02e2150107a0ba
9d6c3c79856c9c5932cbf00af312a5f3045e65d74cc159d9a63ad87108f10a4c1ec800a16c
2ccb957dd7a59b52ddeaa8a4ab5a55ffcfb9675ac0eaa5b8f2feaaedf7d9422000016ab2b0
a80502400003400003400003400003400003400003400003400003400003400003400003400
003400003400003400003400003400003400003400003400003400003400003400003400003
400003400003400003400003400003400003400003400003400003400003400003400003400
003400003400003400003400003400003400003400003400003400003400003400000340000
3400003a0ba037fae0ebdf5c5b2db6a6d52ccaf3a2ca5b8a9c2dc6bada3bf3ff9611cc0b2c
1a0150d1a5ab77bffa716c6a5db526dde4a9b8acd6cb7afa6f6f3ef4c7a3cad1d8deabeabb
acd777fcec2daa3fac7f5c8ee13fa6fc68dbe57be8ab6ed5ef797fdcbf0e93a7dfea79fbfd
fde3f6f8a3abcfbeeb8bffdefee64773b0f9ec3b7fff63e372f0fe39c0bc6a0db6ed0fd3f6
ffe56ff0d40cccc0e6dabbf77cbe68c74d2bc3d5c9bf00306028b33f7fced67facbe9de93a
3d2e36bbb9e9c91fc6b05d38f2bfa9ef3d5cccfcda39bef1d7bf0c603b7f8ce63b7ffeb5f1
7e6d0d9dd6ea8ffce0d3fb7bce137a73837b5b8bfb3c2b373fd9db8d9d98effde25f9bcde5
7aa1c15747cf08d1b3d7dda5ab7bee9bcfaed9be76fce54eb9d7ccf7de83b81fa72fcec677
fdcede6d67ef6e4d69d87df0f0f5f3779f0960fc7cffd78af78e6f88c507b7b73ebf7ac5fd
f9dfb9dc62fee73f4fa7d2f5c36d65eecd1bd4bf6c57b72f7e733e63d9e5b6b7bcf5dbe67e
5effa6f3eee1735d4dcf1ff8f7f7ceafb8c7f9db67fee4da779ede778f77cf2fac1fcd1ad6
b77fbc7bfccfd7af5f9f7fb4fbe2f52b5fe2b9fb667dd7dfc2bff9bf77dcf1da6b77efcedc
3bd0fc42f99e9f9dffec1cc0f8ddcde5e71f57e7efce9e68be33ae67fb9ae6cfe6acdfa69d
bf6a6e317c56cfdfb5e72abb5d389eef0a5bf8daec4f7c63b2fbec77ba8bbfbb5ee36a71d8
fd3e7f78fd0ee0cde5feec7aeeebb9b3371f3e73b7e63d5ceeffcfdaedfbf0fe67af0fe16c
0ee0f1dd277e63f5e4fc7dcd9fba9bf99bcbfd99f7f9f67eef4a98eb7f9fd8f9b7facbeb7f
dbf3afd3bc89e7af7fbb9ef7dc7df2f4e9d3afbfee7aef9e273fb97ff7efc3f9b767fef7cb
3bbb2d0cfc0f79efe9f4f9aff5e5bc9b57b7bdeb3f4fefed35df6dac57b335fb477c83d5dc
7d9de7e7eecfb9f77935c76d3a7f7f3ef9fc557b2e0acebcef99edceddce7d6cbf7ef0e8ed
ab5b8f1ebdaa05fffdcba7afa2073fd0b61f0ebfea35e4fbece1ee33bfd7f7fcfb0f46c7fd
3dc73f7f74eb7efbf347d7f0dbb7bdf3e7fd6bf79cf71f3e7af1e0e18bd74f9ebcdef2fd75
f7f1d4b9f7f8f8dcddd3fd89efdc3dabd7caf76ebb0f9eeeb63ebfb1b1ffcf3cfe1fa1fe3f
f5dee78dcab26edf7eeeffac5de6fe5ca93fb7a8a697e76ff37b3bedf4ccf11795cf5fbeac
f68e8eec3337fef6d38dfd6fbecdfbfcef9c8f39eec1dde7acd9bdd97de5d6defe61f4393f
f9377bf9f81b77fbcefef4cd9c7fcf6f76bf7e7c23eef9bdfee31fb377be9f06f6ead9d9e9
fdcc79fcc3e1fe3ff7f1f7f177b6dd9bd3f7def9db6a7fb8ffcfe79fb973b7dfebd7af8fb6
ddefd97d3e9e3f9bae177bc73ff7da9dfd9fb31b27afee6e7ced5d7e7f7f785f1fc7ea67be
f18b36ff1bef9d71573bd98def7bbe53e9e1d12cfe7a79cfdf5373df9a2b97f5bcb3df5fcc
5cdbfb7e3fde777cf6f6edd3b7ef6ebdeecf59fbe7dfcfad2f43bbbb3bfafb9db5baff5ccf
9b777c08d6dc31ff7ede7377ffef9edcae98773a7ee63a61d79f76ed3bd3e07a0e7c66de76
70ccd9bf9677fdfc8939fb77bc73e6ef7e64ce7e65cefc737ffeeedc6d79ef3c6fc1dc9773
afd99d77bbeff1fc7e73b3f9fcedd6ef49bbf7af77fd98c6ddd0bd7f1fbfd79c7b777cb7ad
97799e0f6e58378a65ee9a9f97beeff1fc737667eeee9e3ee6fcf03afbdddd7dbf5d0bf9ff
f9d5f52f9fbef83e0eeafe4a7a78ffaef5fc6d9a7faeebf7eb47b2fb5fad1ebebd5ff4e8ff
707affc3fcfe47cb4fafaad3fbfff6e05eebf57afbfe17add57f4fbd9bf7bedf3e52f2e9dd
f6feab78efaabdfebdf1f6e3f3febbfbf3ef6fc6ffe7eeffbdb3fbff9ff8fb3fbff9ff9fb3
ff97c1fefbbf76f7fd9be9fd77e3fd77fbfabf1c5d5f7fffe9fbebef9f6fdffbeeb0a3fd17
e2fe2bd4ebdcddbbcedc3bd9b3777fa4f7feae9f39eb36dfe77a67de7d1e3b7dbf97bbee28
7bdf3f3effd6bf7f65ce7fe5de7fb5bcbf09f703aefb8b9a77fff4feff74ce7fd4bcffeb72
effbef3c37effa4e67f3fe7bb76fbf5fe7ffe3a9f3e703b9af333e9bf7fff7d577df7b7fe3
b677df7fdabeefefe7f3f69eef397fffd3e1dbeeafee7defc5abebf79ff8bfdf73fdcc9d83
fcfe8fb4f73fbfbf2fa3ffdd90bea7f37e0fee7fb2f4efc3f26d7fffb798f8feff2fdffa3d
05ff86f1fdf7fbf7f7fb9afaaf5df7dddcfb7f7e7fdd6b3fe7d93f85b7df7d9b9e7b8dffd5
b3ff4f7affeff3fe9fb67fbef4f65fad7f1b9bf6fbdff7ffeffbdf1eea3f03c77eff8f3dff
ccdefd97f77b9ffbddcebd37be37bbbbe7bcfbc33bf39dbfdb7df7fb38f2ffd9f2df7f91fd
f7fb9ffbf16aee5dd7bfcfeaeefd47ddf6bebe39cf6cfb3e82f9c5337b8fbe53befdbcf1fd
5f9e79cf83bb6fe7fdf7a9d3be5defbf9e99ef7c85f7ffbdff78f33fca8ffed79bffb4d8ff
7afae9a5effe0bc3fe7f7ee6ddbd3753fe91c1fe1fcef95df83f71f7dc7fefdceff3dfdf18
7df8f8dcbbfbef33ff3eebdc7fbfb4f7e7bfbeffaef7fe9bddffc7d4fb5fbef3bf0e77f9f3
6feaff5f83fbdf7eedfbf335b9676ffddf0fd7ff2bdb8ff8ddf373f7fcfef7fb3effefb2df
77f73f77ffdbdd1ee3fbbf1ce3ff1f0aecff5fe17e3fc6f767f70ff30fd5f4e7fbdff46b8f
feebbfe47f87b89f7dc71da52fd1ffc7ed3fd5e3ff90df3f13ee0f33ff21dc1f4effe3bbef
0ff67e5aef7f7df7dcc37f7fdef77f6ddeffa1bfff7dcf4dddf77c97feff6fe777fefd1dbe
f73fa9f71fc4fb3ffa4eff5bb2ff60f0fe23deff967efbbdf5fbdfbef7bf9e6f7ec5ef75ff
cefcfb473abf4de7bf20db5ffcbbff2feefd87fbe7ef7fc5fd3fa5fb6f93fbdf88f77fc5bb
ffe2de7f92ee7f5bf77fad5e27f7dfe5ee3fbb1beefbef72ff97bbffceeeff33f9fe9fddbf
778efbef0ef7df1df77f1dfd7fe1fd7705fbbffaee9f3befff31f8fe3bc3fd77dcff1f12dc
7fc7feffcbfe3fc3fd77e7fb8ffbffe7fd7fddf77f9ff77fafeffb9fee7f54df7d80eefe17
8aeafbef7bbe6fdefbffbcf75f7af7bfdeff2fe3bb0f6de13dc7fde7dd0781ffdd7bbff2bd
ff906fbcc05be3ffdfdd7f57b1ff9b79ffb7e1fddfdb7eff5eee3fbfac7be67de37dffd9ef
fbefda9bff7eefbcfbdfbeefff7df75fbff5edff28dc7fddb8ffafeffba5df7756de7fa9bc
ffef7bf7df99fb9f9ec8f7bf5aef3f74df7fa5beffcbbcff6bfff97fdef77f1ddf7f67d9ff
c9b4ffcf74ffbc5defbf33efffd3b9ff6f74ff9f59f77f66de7fc8bcff70defb0fbdff0f19
f7bfba6d9effb3ee7fc9ba1f92f5fe4fd6fd9cac57a8acfb3f59f7833aef3fc8bbb1d9f783
3af70366de0fc9ba1f32ef0766dd0fceba1f99773f34eb7e68e6fd95b3ee8766de0fceba1f
9a79bfa3ebcfbbd7f43e64e6fd79d6fd79d6fd79d6fd79d6fd79d6fd79d6fd798bda
0f3020ac26200001406d00c0240c6000000000000000000003004afe1700e7c0f6db97a45a
a300000000494544ae426082
`.replace(/\s/g, '');

// 将十六进制字符串转换为 Buffer
function hexToBuffer(hexString) {
  return Buffer.from(hexString, 'hex');
}

// 创建图标目录
function createIconDirectory() {
  const iconDir = path.join(__dirname, 'images');
  if (!fs.existsSync(iconDir)) {
    fs.mkdirSync(iconDir, { recursive: true });
  }
}

// 生成简单的 PNG 图标
function createSimpleIcon() {
  console.log('正在生成简单的 PNG 图标...');

  // 确保图标目录存在
  createIconDirectory();

  // 图标文件路径
  const iconPath = path.join(__dirname, 'images', 'icon.png');

  // 将十六进制数据转换为 Buffer 并写入文件
  const iconData = hexToBuffer(pngHexData);
  fs.writeFileSync(iconPath, iconData);

  console.log(`图标已成功创建: ${iconPath}`);
}

// 如果直接运行这个脚本
if (require.main === module) {
  createSimpleIcon();
}

module.exports = { createSimpleIcon };
